using System;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

using Ventura.Interfaces;

namespace Ventura.Accumulator.EntropyExtractors
{
    /// <summary>
    /// Makes a REST call to an API provided by the  Australian National University (ANU), 
    /// to retrieve numbers generated by measuring the quantum fluctuations of a vacuum,
    /// which quantum mechanical theory predicts will be random.
    /// For more see: http://qrng.anu.edu.au/API/api-demo.php
    /// </summary>
    public class RemoteQuantumRngExtractor : EntropyExtractorBase, IEntropyExtractor
    {
        public RemoteQuantumRngExtractor(int sourceNumber) : base(sourceNumber)
        {
        }

        protected override Task<byte[]> ExtractEntropicData()
        {
            Func<byte[]> extraction = () =>
            {
                using (WebClient wc = new WebClient())
                {
                    var jsonResponse = wc.DownloadString("https://qrng.anu.edu.au/API/jsonI.php?length=30&type=uint8");
                    string part = jsonResponse.Substring(jsonResponse.IndexOf('[') + 1);

                    part = part.Replace("],\"success\":true}\n", string.Empty);

                    var numberArray = part.Split(',').Select(Int32.Parse).ToList();
                    byte[] result = new byte[30];

                    for (int i = 0; i < result.Length; i++)
                    {
                        result[i] = BitConverter.GetBytes(numberArray[i])[0];
                    }
                    
                    return result;
                }
            };

            return Task.Run(extraction);
        }
    }
}